apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: codelens-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "codelens-ip"
    networking.gke.io/managed-certificates: "codelens-ssl-cert"
    kubernetes.io/ingress.allow-http: "false"
    cloud.google.com/backend-config: '{"default": "websocket-backend-config"}'
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location /ws {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
      }
spec:
  rules:
  - host: {{DOMAIN}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codelens-frontend
            port:
              number: 80
  - host: www.{{DOMAIN}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codelens-frontend
            port:
              number: 80
  - host: api.{{DOMAIN}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: codelens-backend
            port:
              number: 8000
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: codelens-ssl-cert
spec:
  domains:
    - {{DOMAIN}}
    - www.{{DOMAIN}}
    - api.{{DOMAIN}}
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: websocket-backend-config
spec:
  timeoutSec: 3600
  connectionDraining:
    drainingTimeoutSec: 60
